2021-11-04 21:22:19 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-04 21:26:49 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:77), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:73), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor125.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-04 21:27:00 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:77), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:73), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor125.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-04 21:27:04 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:77), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:73), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor125.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-04 21:36:34 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by null.
Full stack trace:[com.adtimokhin.controller.AuthController.loginGet(AuthController.java:53), jdk.internal.reflect.GeneratedMethodAccessor133.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-04 22:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.saveBookingInformation(BackupUtil.java:65)]: Initiating deletion of all bookings for 2021 11 04 22:30.
2021-11-04 22:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.saveBookingInformation(BackupUtil.java:98)]: All bookings were deleted.
2021-11-04 22:53:12 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 18:44:46 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 18:44:46 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 18:47:48 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 18:47
2021-11-05 18:47:48 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:00:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:01:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:02:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 18:59
2021-11-05 19:02:40 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:02
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:02
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:02
2021-11-05 19:03:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:07
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:07:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:09
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:09:37 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:10
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:10
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:10
2021-11-05 19:11:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:11:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:11:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:11:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 2880        
2021-11-05 19:11:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 2280
2021-11-05 19:11:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 2314
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:12:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:16:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 09:45
2021-11-05 19:17:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:19
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:20:45 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:19
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:19
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:19
2021-11-05 19:21:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:30:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 19:29
2021-11-05 19:30:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:29
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:31:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 150
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:29
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:29
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:29
2021-11-05 19:32:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:32:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:32:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:32:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 19:32:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 840
2021-11-05 19:32:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 853
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:31
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:31
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:31
2021-11-05 19:32:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:32
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:33:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:33
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:34:13 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:33
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:33
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:33
2021-11-05 19:34:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:36:39 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 19:35
2021-11-05 19:36:39 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 19:37:14 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 0619:35
2021-11-05 19:37:14 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 061
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:35
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:35
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:35
2021-11-05 19:37:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:37
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:37
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 19:37
2021-11-05 19:38:24 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 19:41:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 19:41:35 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 19:51:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 19:51:11 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 12:30
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 600
2021-11-05 19:51:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 600
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 12:30
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 80
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 12:30
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 12:30
2021-11-05 19:54:38 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:56
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:56
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:56
2021-11-05 19:57:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 19:58:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 19:58:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 19:58:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 19:58:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 720
2021-11-05 19:58:44 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 662
2021-11-05 20:19:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 20:18
2021-11-05 20:19:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 09 16:00
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 09 
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 20:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 60
2021-11-05 20:21:32 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 09 16:00
2021-11-05 20:21:32 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 09 
2021-11-05 20:21:32 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 09 16:00
2021-11-05 20:21:32 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 09 
2021-11-05 20:25:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 20:20
2021-11-05 20:25:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 20:27:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 20:20
2021-11-05 20:27:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 20:44:30 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 20:45:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 19:34
2021-11-05 20:45:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 20:52:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 20:52:11 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 20:47
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 70
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 20:47
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 20:47
2021-11-05 20:52:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 20:52:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 20:52:27 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 20:52:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 20:52:30 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 20:53:46 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 20:52
2021-11-05 20:53:46 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 20:55:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 20:52
2021-11-05 20:55:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 20:56:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 20:56:09 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 20:57:19 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 
2021-11-05 20:57:19 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 13:50
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 13:50
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 13:50
2021-11-05 20:59:26 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 14:30
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 14:30
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 14:30
2021-11-05 21:00:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:00:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:00:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:00:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 21:00:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 1020
2021-11-05 21:00:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 1050
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 15:50
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 15:50
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 15:50
2021-11-05 21:01:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:04
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:04
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:04
2021-11-05 21:06:58 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:07:53 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 21:07
2021-11-05 21:07:53 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:08
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:08:35 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 21:12:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 21:11
2021-11-05 21:12:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:12
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:12
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:12
2021-11-05 21:13:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:29:48 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 21:29
2021-11-05 21:29:48 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:29
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:29
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:29
2021-11-05 21:30:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:30
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:30
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 21:30
2021-11-05 21:31:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 21:36:03 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:36:03 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:40:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:40:07 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:40:14 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'GET' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:40:19 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'GET' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:45:03 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:45:03 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:52:36 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:52:36 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:54:14 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:54:14 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:55:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:55:11 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 21:55:18 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 21:55:18 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:00:08 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 22:00:08 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137), jdk.internal.reflect.GeneratedMethodAccessor121.invoke(Unknown Source), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:02:44 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:06:16 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:06:16 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 22:06:16 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:145), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:07:36 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:07:36 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 22:07:36 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:145), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:08:05 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:08:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06
2021-11-05 22:08:05 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 10.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:85), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:80), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:145), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:11:28 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:11:39 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'POST' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712), org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459), org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384), org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312), org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.forward(HeaderWriterFilter.java:171), org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:73), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:129), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:11:46 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by null.
Full stack trace:[com.adtimokhin.controller.AuthController.loginGet(AuthController.java:53), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:11:47 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by null.
Full stack trace:[com.adtimokhin.controller.AuthController.loginGet(AuthController.java:53), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 22:13:59 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:13:59 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 80
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:13:59 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:14:06 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:14:06 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:14:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:14:06 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:14:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:17:04 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:17:04 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 135
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:17:04 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:17:29 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:17:29 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:17:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:17:29 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:19:01 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 05 22:17
2021-11-05 22:19:01 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 05 22:17
2021-11-05 22:19:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 22:17
2021-11-05 22:19:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 22:20:27 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:20:27 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:20:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:21:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:21:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:21:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 22:21:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 600
2021-11-05 22:21:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 579
2021-11-05 22:21:31 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:21:31 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:21:31 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:23:07 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:23:07 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:23:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:23:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:25:10 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:25:10 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:25:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:25:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:25:56 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:25:56 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:25:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.saveBookingInformation(BackupUtil.java:65)]: Initiating deletion of all bookings for 2021 11 05 22:30.
2021-11-05 22:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.saveBookingInformation(BackupUtil.java:98)]: All bookings were deleted.
2021-11-05 22:50:50 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 22:48
2021-11-05 22:50:50 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 22:48
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:48
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:48
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:48
2021-11-05 22:50:50 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:51:07 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 05 22:50
2021-11-05 22:51:07 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 05 22:50
2021-11-05 22:51:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 22:50
2021-11-05 22:51:07 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 22:52:43 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 22:52:43 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 22:52:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 60
2021-11-05 22:54:23 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 07 00:00
2021-11-05 22:54:23 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 07 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 00:00
2021-11-05 22:54:23 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 22:57:21 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 05 22:54
2021-11-05 22:57:21 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 05 22:54
2021-11-05 22:57:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 22:54
2021-11-05 22:57:21 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 22:58:30 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 22:54
2021-11-05 22:58:30 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 22:54
2021-11-05 22:58:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:58:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:58:49 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 22:54
2021-11-05 22:58:49 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 22:54
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 22:58:49 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 160
2021-11-05 22:59:10 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 22:54
2021-11-05 22:59:10 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 22:54
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 22:59:10 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 150
2021-11-05 22:59:27 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 22:54
2021-11-05 22:59:27 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 22:54
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 22:54
2021-11-05 22:59:27 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:00:09 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 07 22:59
2021-11-05 23:00:09 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 07 22:59
2021-11-05 23:00:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 22:59
2021-11-05 23:00:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 23:00:41 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 07 22:59
2021-11-05 23:00:41 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 07 22:59
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 22:59
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 22:59
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 07 22:59
2021-11-05 23:00:41 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 07 
2021-11-05 23:00:52 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:00:52 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:00:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:00:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:01:39 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 05 23:01
2021-11-05 23:01:39 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 05 23:01
2021-11-05 23:01:39 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 05 23:01
2021-11-05 23:01:39 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 05 
2021-11-05 23:02:12 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:02:12 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 180
2021-11-05 23:02:12 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 210
2021-11-05 23:03:33 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 00:00
2021-11-05 23:03:33 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 75
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:03:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:04:43 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:04:43 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 120
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:04:43 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:17:10 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'GET' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 23:17:14 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'GET' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 23:17:35 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by Request method 'GET' not supported.
Full stack trace:[org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:438), org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:379), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125), org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67), org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498), org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1258), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898), javax.servlet.http.HttpServlet.service(HttpServlet.java:634), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-05 23:17:56 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:17:56 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:17:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:17:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 65
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:17:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:20:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:20:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:20:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 23:20:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 660
2021-11-05 23:20:05 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 640
2021-11-05 23:20:33 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:20:33 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 65
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:20:33 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:22:01 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:22:01 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:22:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:22:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:22:47 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06 00:00
2021-11-05 23:22:47 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 60
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 80
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:22:47 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:23:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:23:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:23:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 1440
2021-11-05 23:23:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 780
2021-11-05 23:23:30 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 772
2021-11-05 23:23:57 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 06
2021-11-05 23:23:57 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 06 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 0000 00 00 
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:148)]: Minute difference YY : 0
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:157)]: Minute difference MM : 0
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:167)]: Minute difference DD : 0
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:176)]: Minute difference HH : 120
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:186)]: Minute difference MM : 140
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:84)]: Input data for method extractYearMonthDay() is 2021 11 06 00:00
2021-11-05 23:23:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:86)]: substring: 2021 11 06 
2021-11-05 23:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.deleteAllComplaints(BackupUtil.java:108)]: Initiating deletion of all complaints.
2021-11-05 23:30:00 TRACE [com.adtimokhin.util.backup.BackupUtil.deleteAllComplaints(BackupUtil.java:111)]: All complaints were deleted.
2021-11-06 00:12:57 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 11 00:12
2021-11-06 00:12:57 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 11 00:12
2021-11-06 00:12:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:12
2021-11-06 00:12:57 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:13:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:13:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:13:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:13:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 0
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 120
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 120
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:12
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:12
2021-11-06 00:13:56 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:14:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:14:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:14:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 7200
2021-11-06 00:14:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 7800
2021-11-06 00:14:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 7786
2021-11-06 00:15:16 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 11 00:14
2021-11-06 00:15:16 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 11 00:14
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:14
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:15:17 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 0
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 120
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 120
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:14
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:14
2021-11-06 00:15:25 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:15:54 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:129)]: date: 2021 11 11 00:15
2021-11-06 00:15:54 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: date: 2021 11 11 00:15
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:15
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:15:54 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 0
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 120
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 120
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:15
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:15
2021-11-06 00:16:01 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:16:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:16:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:16:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 7200
2021-11-06 00:16:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 7800
2021-11-06 00:16:09 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 7784
2021-11-06 00:16:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:16:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:16:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 7200
2021-11-06 00:16:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 7800
2021-11-06 00:16:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 7784
2021-11-06 00:18:52 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:131)]: date: 2021 11 11 00:18
2021-11-06 00:18:52 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137)]: date: 2021 11 11 00:18
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:18
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 0
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 120
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 120
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:18
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:18
2021-11-06 00:18:52 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:20:34 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:131)]: date: 2021 11 06 00:20
2021-11-06 00:20:34 DEBUG [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:137)]: date: 2021 11 06 00:20
2021-11-06 00:20:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 06 00:20
2021-11-06 00:20:34 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 06 
2021-11-06 00:35:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:35:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:35:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 7200
2021-11-06 00:35:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 7800
2021-11-06 00:35:15 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 7765
2021-11-06 00:35:15 TRACE [com.adtimokhin.controller.BookingController.cancelBooking(BookingController.java:219)]: About to delete booking for machine id 1, for time 2021 11 11 10:00 - 2021 11 11 12:00 and by user 6 
2021-11-06 00:35:15 TRACE [com.adtimokhin.controller.BookingController.cancelBooking(BookingController.java:221)]: Cancellation was successful!
2021-11-06 00:36:11 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:35
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 0000 00 00 00:00
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 0000 00 00 
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:151)]: Minute difference YY : 0
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:160)]: Minute difference MM : 0
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:170)]: Minute difference DD : 0
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:179)]: Minute difference HH : 60
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.areFarEnoughInTime(DateFormatResolver.java:189)]: Minute difference MM : 60
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:35
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:87)]: Input data for method extractYearMonthDay() is 2021 11 11 00:35
2021-11-06 00:36:11 TRACE [com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:89)]: substring: 2021 11 11 
2021-11-06 00:36:11 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:170)]:  New Washing machine Booking was made. Data. Machine type = washing_machines. machineId = 1. startHour = 10. startHour = 10. endHour = 11. endMinute = 12. date = 2021 11 11 00:35
2021-11-06 00:57:03 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 00:57:51 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:188)]: An error had occurred while user 6 tried to add a new booking. Error: This time slot is not available.. Data. Machine type = washing_machines. machineId = 1. startHour = 9. startHour = 9. endHour = 9. endMinute = 46. date = 2021 11 06 00:56
2021-11-06 01:00:34 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 01:00:34 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:188)]: An error had occurred while user 6 tried to add a new booking. Error: Fill in all of the fields as numbers.. Data. Machine type = washing_machines. machineId = . startHour = . startHour = . endHour = . endMinute = . date = 2021 11 06 01:00
2021-11-06 01:01:04 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 01:01:04 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:188)]: An error had occurred while user 6 tried to add a new booking. Error: Fill in all of the fields as numbers.. Data. Machine type = washing_machines. machineId = . startHour = . startHour = . endHour = . endMinute = . date = 2021 11 07 00:00
2021-11-06 01:02:07 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:135)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 01:02:07 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 8.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:91), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:87), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:151), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
2021-11-06 01:06:25 TRACE [com.adtimokhin.controller.BookingController.addBooking(BookingController.java:157)]: User 6 (name: Aleksandr Timokhin) is about to attempt adding a booking
2021-11-06 01:06:25 ERROR [com.adtimokhin.controller.DefaultExceptionHandlerControlAdvice.sampleExceptionHandler(DefaultExceptionHandlerControlAdvice.java:42)]: Internal server error it was caused by begin 0, end 11, length 5.
Full stack trace:[java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319), java.base/java.lang.String.substring(String.java:1874), com.adtimokhin.util.time.DateFormatResolver.extractYearMonthDay(DateFormatResolver.java:91), com.adtimokhin.util.time.DateFormatResolver.resolveTimeForDate(DateFormatResolver.java:87), com.adtimokhin.controller.BookingController.addBooking(BookingController.java:173), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method), java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.base/java.lang.reflect.Method.invoke(Method.java:566), org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197), org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141), org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895), org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808), org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87), org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064), org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963), org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006), org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909), javax.servlet.http.HttpServlet.service(HttpServlet.java:660), org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883), javax.servlet.http.HttpServlet.service(HttpServlet.java:741), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115), org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121), org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126), org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218), org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103), org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:132), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90), org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110), org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55), org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119), org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336), org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211), org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183), org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358), org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271), org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193), org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166), org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202), org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96), org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541), org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139), org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92), org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688), org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74), org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343), org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373), org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65), org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868), org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594), org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49), java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128), java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628), org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61), java.base/java.lang.Thread.run(Thread.java:834)]
